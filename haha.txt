USAGE: clspv [options] <input files>

OPTIONS:

Color Options:

  --color                                                    - Use colors in output (default=autodetect)

General options:

  -D <define>                                                - Define a #define directive.
  -I <include path>                                          - Add a directory to the list of directories to be searched for header files.
  -O <level>                                                 - Optimization level to use
  --Werror                                                   - Turn warnings into errors
  --abort-on-max-devirt-iterations-reached                   - Abort when the max iterations for devirtualization CGSCC repeat pass is reached
  --arch=<value>                                             - Specify the target SPIR architecture
    =spir                                                    -   spir-unknown-unknown target (pointers are 32-bit)
    =spir64                                                  -   spir64-unknown-unknown target (pointers are 64-bit)
  --atomic-counter-update-promoted                           - Do counter update using atomic fetch add  for promoted counters only
  --atomic-first-counter                                     - Use atomic fetch add for first counter in a function (usually the entry counter)
  --bounds-checking-single-trap                              - Use one trap block per function
  --bounds-checking-unique-traps                             - Always use one trap per check
  --cfg-hide-cold-paths=<number>                             - Hide blocks with relative frequency below the given value
  --cfg-hide-deoptimize-paths                                - 
  --cfg-hide-unreachable-paths                               - 
  --cl-arm-non-uniform-work-group-size                       - Enable the cl_arm_non_uniform_work_group_size extension.
  --cl-denorms-are-zero                                      - If specified, denormalized floating point numbers may be flushed to zero.
  --cl-fast-relaxed-math                                     - This option causes the preprocessor macro __FAST_RELAXED_MATH__ to be defined. Sets the optimization options -cl-finite-math-only and -cl-unsafe-math-optimizations.
  --cl-finite-math-only                                      - Allow optimizations for floating-point arithmetic that assume that arguments and results are not NaNs or INFs.
  --cl-fp32-correctly-rounded-divide-sqrt                    - Single precision floating-point divide (x/y and 1/x) and sqrt used are correctly rounded.
  --cl-kernel-arg-info                                       - Produce kernel argument info.
  --cl-mad-enable                                            - Allow a * b + c to be replaced by a mad. The mad computes a * b + c with reduced accuracy.
  --cl-native-math                                           - Perform all math as fast as possible. This option does not guarantee that OpenCL precision bounds are maintained. Implies -cl-fast-relaxed-math.
  --cl-no-signed-zeros                                       - Allow optimizations for floating-point arithmetic that ignore the signedness of zero.
  --cl-opt-disable                                           - This option disables all optimizations. The default is optimizations are enabled.
  --cl-single-precision-constant                             - Treat double precision floating-point constant as single precision constant.
  --cl-std=<value>                                           - Select OpenCL standard
    =CL1.0                                                   -   OpenCL C 1.0
    =CL1.1                                                   -   OpenCL C 1.1
    =CL1.2                                                   -   OpenCL C 1.2
    =CL2.0                                                   -   OpenCL C 2.0
    =CL3.0                                                   -   OpenCL C 3.0
    =CLC++                                                   -   C++ for OpenCL
  --cl-unsafe-math-optimizations                             - Allow optimizations for floating-point arithmetic that (a) assume that arguments and results are valid, (b) may violate IEEE 754 standard and (c) may violate the OpenCL numerical compliance requirements. This option includes the -cl-no-signed-zeros and -cl-mad-enable options.
  --cluster-pod-kernel-args                                  - Collect plain-old-data kernel arguments into a struct in a single storage buffer, using a binding number after other arguments. Use this to reduce storage buffer descriptors.
  --constant-args-ubo                                        - Put pointer-to-constant kernel args in UBOs.
  --cost-kind=<value>                                        - Target cost kind
    =throughput                                              -   Reciprocal throughput
    =latency                                                 -   Instruction latency
    =code-size                                               -   Code size
    =size-latency                                            -   Code size and latency
  --debug-info-correlate                                     - Use debug info to correlate profiles.
  --debugify-func-limit=<ulong>                              - Set max number of processed functions per pass.
  --debugify-level=<value>                                   - Kind of debug info to add
    =locations                                               -   Locations only
    =location+variables                                      -   Locations and Variables
  --debugify-quiet                                           - Suppress verbose debugify output
  --decorate-nonuniform                                      - Decorate NonUniform Pointers with the NonUniform decoration.
  --disable-auto-upgrade-debug-info                          - Disable autoupgrade of debug info
  --disable-i2p-p2i-opt                                      - Disables inttoptr/ptrtoint roundtrip optimization
  --distinct-kernel-descriptor-sets                          - Each kernel uses its own descriptor set for its arguments. Turns off direct-resource-access optimizations.
  --do-counter-promotion                                     - Do counter register promotion
  --dot-cfg-mssa=<file name for generated dot file>          - file name for generated dot file
  --enable-feature-macros=<value>                            - Comma separated list of feature macros to enable. Feature macros not enabled are implicitly disabled. Only available with CL3.0.
  --enable-gvn-hoist                                         - Enable the GVN hoisting pass (default = off)
  --enable-gvn-memdep                                        - 
  --enable-gvn-sink                                          - Enable the GVN sinking pass (default = off)
  --enable-load-in-loop-pre                                  - 
  --enable-load-pre                                          - 
  --enable-loop-simplifycfg-term-folding                     - 
  --enable-name-compression                                  - Enable name/filename string compression
  --enable-opaque-pointers                                   - Use opaque pointers
  --enable-printf                                            - Enable support for printf
  --enable-split-backedge-in-load-pre                        - 
  --experimental-debug-variable-locations                    - Use experimental new value-tracking variable locations
  --force-tail-folding-style=<value>                         - Force the tail folding style
    =none                                                    -   Disable tail folding
    =data                                                    -   Create lane mask for data only, using active.lane.mask intrinsic
    =data-without-lane-mask                                  -   Create lane mask with compare/stepvector
    =data-and-control                                        -   Create lane mask using active.lane.mask intrinsic, and use it for both data and control flow
    =data-and-control-without-rt-check                       -   Similar to data-and-control, but remove the runtime check
  --fp16                                                     - Enable support for cl_khr_fp16.
  --fp64                                                     - Enable support for FP64 (cl_khr_fp64 and/or __opencl_c_fp64).
  --fs-profile-debug-bw-threshold=<uint>                     - Only show debug message if the source branch weight is greater  than this value.
  --fs-profile-debug-prob-diff-threshold=<uint>              - Only show debug message if the branch probility is greater than this value (in percentage).
  -g                                                         - Produce debug information.
  --generate-merged-base-profiles                            - When generating nested context-sensitive profiles, always generate extra base profile for function with all its context profiles merged into it.
  --global-offset                                            - Enable support for global offsets
  --global-offset-push-constant                              - Enable support for global offsets in push constants
  --hack-block-order                                         - Order basic blocks using structured order
  --hack-clamp-width                                         - Force clamp to be on 32bit elements at least when performing staturating operations
  --hack-convert-to-float                                    - Insert a dummy instruction after conversions to float to avoid driver optimization getting rid of the conversion
  --hack-dis                                                 - Force use of a distinct image or sampler variable for each image or sampler kernel argument.  This prevents sharing of resource variables.
  --hack-image1d-buffer-bgra                                 - Shuffle component of read when CL_BGRA format is not supported for image1d_buffer.
  --hack-initializers                                        - At the start of each kernel, explicitly write the initializer value for a compiler-generated variable containing the workgroup size. Required by some drivers to make the get_global_size builtin function work when used with non-constant dimension index.
  --hack-inserts                                             - Avoid all single-index OpCompositInsert instructions into struct types by using complete composite construction and extractions
  --hack-logical-ptrtoint                                    - Allow ptrtoint on logical address spaces when it can be guaranteed that they won't be converted back to pointers.
  --hack-mul-extended                                        - Avoid usage of OpSMulExtended and OpUMulExtended
  --hack-phis                                                - Scalarize phi instructions of struct type before code generation
  --hack-scf                                                 - Rewrite signed integer comparisons to use other kinds of instructions
  --hack-undef                                               - Use OpConstantNull instead of OpUndef for floating point, integer, or vectors of them
  --hash-based-counter-split                                 - Rename counter variable of a comdat function based on cfg hash
  --hot-cold-split                                           - Enable hot-cold splitting pass
  --images                                                   - Enable support for images
  --import-all-index                                         - Import all external functions in index.
  --inline-entry-points                                      - Exhaustively inline entry points.
  --instcombine-code-sinking                                 - Enable code sinking
  --instcombine-guard-widening-window=<uint>                 - How wide an instruction window to bypass looking for another guard
  --instcombine-max-num-phis=<uint>                          - Maximum number phis to handle in intptr/ptrint folding
  --instcombine-max-sink-users=<uint>                        - Maximum number of undroppable users for instruction sinking
  --instcombine-maxarray-size=<uint>                         - Maximum array size considered when doing a combine
  --instcombine-negator-enabled                              - Should we attempt to sink negations?
  --instcombine-negator-max-depth=<uint>                     - What is the maximal lookup depth when trying to check for viability of negation sinking.
  --instrprof-atomic-counter-update-all                      - Make all profile counter updates atomic (for testing only)
  --int8                                                     - Allow 8-bit integers
  --internalize-public-api-file=<filename>                   - A file containing list of symbol names to preserve
  --internalize-public-api-list=<list>                       - A list of symbol names to preserve
  --iterative-counter-promotion                              - Allow counter promotion across the whole loop nest.
  --long-vector                                              - Allow vectors of 8 and 16 elements. Experimental
  --lto-embed-bitcode=<value>                                - Embed LLVM bitcode in object files produced by LTO
    =none                                                    -   Do not embed
    =optimized                                               -   Embed after all optimization passes
    =post-merge-pre-opt                                      -   Embed post merge, but before optimizations
  --matrix-default-layout=<value>                            - Sets the default matrix layout
    =column-major                                            -   Use column-major layout
    =row-major                                               -   Use row-major layout
  --matrix-print-after-transpose-opt                         - 
  --max-counter-promotions=<int>                             - Max number of allowed counter promotions
  --max-counter-promotions-per-loop=<uint>                   - Max number counter promotions per loop to avoid increasing register pressure too much
  --max-pushconstant-size=<uint>                             - Specify the maximum push constant interface size in bytes.
  --max-ubo-size=<uint>                                      - Specify the maximum UBO array size in bytes.
  --mir-strip-debugify-only                                  - Should mir-strip-debug only strip debug info from debugified modules by default
  --misexpect-tolerance=<uint>                               - Prevents emiting diagnostics when profile counts are within N% of the threshold..
  --module-constants-in-storage-buffer                       - Module-scope __constants are collected into a single storage buffer.  The binding and initialization data are reported in the descriptor map.
  --no-16bit-storage=<value>                                 - Disable fine-grained 16-bit storage capabilities.
    =ssbo                                                    -   Disallow 16-bit types in SSBO interfaces
    =ubo                                                     -   Disallow 16-bit types in UBO interfaces
    =pushconstant                                            -   Disallow 16-bit types in push constant interfaces
  --no-8bit-storage=<value>                                  - Disable fine-grained 8-bit storage capabilities.
    =ssbo                                                    -   Disallow 8-bit types in SSBO interfaces
    =ubo                                                     -   Disallow 8-bit types in UBO interfaces
    =pushconstant                                            -   Disallow 8-bit types in push constant interfaces
  --no-discriminators                                        - Disable generation of discriminator information.
  --no-dra                                                   - No Direct Resource Access: Avoid rewriting helper functions to access resources directly instead of by pointers in function arguments.  Affects kernel arguments of type pointer-to-global, pointer-to-constant, image, and sampler.
  --no-inline-single                                         - Disable inlining functions with single call sites.
  --no-smsv                                                  - No Share Module Scope Variables: Avoid de-duplicating module scope variables.
  --no-vec3-to-vec4                                          - Force NOT lowering vec3 to vec4
  --no-zero-allocas                                          - Don't zero-initialize stack variables
  -o <filename>                                              - Override output filename
  --object-size-offset-visitor-max-visit-instructions=<uint> - Maximum number of instructions for ObjectSizeOffsetVisitor to look at
  --output-format=<value>                                    - Select output format (ll|bc|spv|c)
    =spv                                                     -   Vulkan SPIR-V
    =ll                                                      -   Readable LLVM IR (Stop compilation before clspv specific passes)
    =bc                                                      -   Binary LLVM IR (Stop compilation before clspv specific passes)
    =c                                                       -   C initializer list (of Vulkan SPIR-V)
  --pgo-block-coverage                                       - Use this option to enable basic block coverage instrumentation
  --pgo-temporal-instrumentation                             - Use this option to enable temporal instrumentation
  --pgo-view-block-coverage-graph                            - Create a dot file of CFGs with block coverage inference information
  --physical-storage-buffers                                 - Use physical storage buffers instead of storage buffers
  --pod-pushconstant                                         - POD kernel arguments are in the push constant interface
  --pod-ubo                                                  - POD kernel arguments are in uniform buffers
  --poison-checking-function-local                           - Check that returns are non-poison (for testing)
  --print-pipeline-passes                                    - Print a '-passes' compatible string describing the pipeline (best-effort only).
  --printf-buffer-size=<uint>                                - Size of the printf storage buffer
  --relaxed-ubo-layout                                       - Allow UBO layouts, that do not satisfy the restriction that ArrayStride is a multiple of array alignment. This does not generate valid SPIR-V for the Vulkan environment; however, some drivers may accept it.
  --rewrite-packed-structs                                   - Rewrite packed structs passed as buffers to a new packed structs with an array of i8 of equal size to reduce struct alignment
  --rounding-mode-rte=<value>                                - Set execution mode RoundingModeRTE for a floating point type
    =16                                                      -   Set execution mode RoundingModeRTE for fp16
    =32                                                      -   Set execution mode RoundingModeRTE for fp32
    =64                                                      -   Set execution mode RoundingModeRTE for fp64
  --runtime-counter-relocation                               - Enable relocating counters at runtime.
  --safepoint-ir-verifier-print-only                         - 
  --sample-profile-check-record-coverage=<N>                 - Emit a warning if less than N% of records in the input profile are matched to the IR.
  --sample-profile-check-sample-coverage=<N>                 - Emit a warning if less than N% of samples in the input profile are matched to the IR.
  --sample-profile-max-propagate-iterations=<uint>           - Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
  --sanitizer-early-opt-ep                                   - Insert sanitizers on OptimizerEarlyEP.
  --scalar-block-layout                                      - Assume VK_EXT_scalar_block_layout
  --show-ids                                                 - Show SPIR-V IDs for functions
  --skip-ret-exit-block                                      - Suppress counter promotion if exit blocks contain ret.
  --speculative-counter-promotion-max-exiting=<uint>         - The max number of exiting blocks of a loop to allow  speculative counter promotion
  --speculative-counter-promotion-to-loop                    - When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.
  --spv-version=<value>                                      - Specify the SPIR-V binary version
    =1.0                                                     -   SPIR-V version 1.0 (Vulkan 1.0)
    =1.3                                                     -   SPIR-V version 1.3 (Vulkan 1.1). Experimental
    =1.4                                                     -   SPIR-V version 1.4 (Vulkan 1.1). Experimental
    =1.5                                                     -   SPIR-V version 1.5 (Vulkan 1.2). Experimental
    =1.6                                                     -   SPIR-V version 1.6 (Vulkan 1.3). Experimental
  --std430-ubo-layout                                        - Allow UBO layouts that conform to std430 (SSBO) layout requirements. This does not generate valid SPIR-V for the Vulkan environment; however, some drivers may accept it.
  --summary-file=<string>                                    - The summary file to use for function importing.
  --thinlto-assume-merged                                    - Assume the input has already undergone ThinLTO function importing and the other pre-optimization pipeline changes.
  --type-based-intrinsic-cost                                - Calculate intrinsics cost based only on argument types
  --ubsan-unique-traps                                       - Deoptimize traps for UBSAN so there is 1 trap per check
  --uniform-workgroup-size                                   - Assume all workgroups are uniformly sized.
  --use-native-builtins=<value>                              - Comma separated list of builtin functions that should use the native implementation instead of the one provided by the builtin library.
  --vec3-to-vec4                                             - Force lowering vec3 to vec4
  --verify                                                   - Verify diagnostic outputs
  --verify-region-info                                       - Verify region info (time consuming)
  --vp-counters-per-site=<number>                            - The average number of profile counters allocated per value profiling site.
  --vp-static-alloc                                          - Do static counter allocation for value profiler
  -w                                                         - Disable all warnings
  --work-dim                                                 - Enable support for get_work_dim() built-in function
  -x=<value>                                                 - Select input type
    =cl                                                      -   OpenCL source
    =ir                                                      -   LLVM IR

Generic Options:

  --help                                                     - Display available options (--help-hidden for more)
  --help-list                                                - Display list of available options (--help-list-hidden for more)
  --version                                                  - Display the version of this program
